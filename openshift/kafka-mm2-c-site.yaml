apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaMirrorMaker2
metadata:
  name: mm2-extended
  namespace: quarkusdroneshop-demo
spec:
  version: 3.9.0
  replicas: 1
  connectCluster: "shop-csite"
  enableRestApi: true
  clusters:
    - alias: "shop-asite"
      bootstrapServers: "external-shop-cluster-kafka-asite:9094"
    - alias: "shop-bsite"
      bootstrapServers: "external-shop-cluster-kafka-bsite:9094"  
    - alias: "shop-csite"
      bootstrapServers: "shop-cluster-kafka-external-bootstrap:9094"
  ports:
    - name: rest-api
      port: 8083
      targetPort: 8083
      protocol: TCP
  selector:
    strimzi.io/name: mm2-extended-mirrormaker2
  logging:
    type: inline
    loggers:
      connect.root.logger.level: "INFO"
      org.apache.kafka.connect.mirror.MirrorSourceConnector: "DEBUG"
      org.apache.kafka.connect.mirror.CheckpointTask: "DEBUG"
      org.apache.kafka.connect.mirror.HeartbeatTask: "DEBUG"
      org.apache.kafka.connect.mirror.MirrorClient: "DEBUG"
      org.apache.kafka.connect.mirror.OffsetSyncStore: "DEBUG"
  mirrors:
    - sourceCluster: "shop-asite"
      targetCluster: "shop-csite"
      topicsPattern: "^(qdca10-in|qdca10pro-in|orders.*|web.*|inventory.*|eighty-six.*|rewards|loyalty-updates.*)$"
      groupsPattern: ".*"
      sourceConnector:
        enabled: true
        config:
          bootstrap.servers: "external-shop-cluster-kafka-asite:9094"
          replication.policy.class: "org.apache.kafka.connect.mirror.DefaultReplicationPolicy"
          replication.policy.separator: "."
          consumer.fetch.min.bytes: "1"
          consumer.fetch.max.wait.ms: "10"
          producer.linger.ms: "0"
          producer.batch.size: "16384"
          emit.heartbeats.enabled: true
          emit.checkpoints.enabled: true
          sync.group.offsets.enabled: true
          sync.topic.acls.enabled: false
          refresh.topics.enabled: true
          refresh.groups.enabled: true
          auto.create.topics.enable: true
          security.protocol: SASL_PLAINTEXT
          sasl.mechanism: SCRAM-SHA-512
          sasl.jaas.config: "${SASL_JAAS_CONFIG}"
          producer.request.timeout.ms: 60000
          consumer.request.timeout.ms: 60000
          consumer.metadata.fetch.timeout.ms: 60000
          offset-syncs.topic.replication.factor: 1
          refresh.topics.interval.seconds: 10
          client.dns.lookup: use_all_dns_ips
          config.storage.topic: mirrormaker2-cluster-configs
          offset.storage.topic: mirrormaker2-cluster-offsets
          status.storage.topic: mirrormaker2-cluster-status
    - sourceCluster: "shop-bsite"
      targetCluster: "shop-csite"
      topicsPattern: "^(qdca10-in|qdca10pro-in|orders.*|web.*|inventory.*|eighty-six.*|loyalty-updates.*)$"
      groupsPattern: ".*"
      sourceConnector:
        enabled: true
        config:
          bootstrap.servers: "external-shop-cluster-kafka-bsite:9094"
          replication.policy.class: "org.apache.kafka.connect.mirror.DefaultReplicationPolicy"
          replication.policy.separator: "."
          consumer.fetch.min.bytes: "1"
          consumer.fetch.max.wait.ms: "10"
          producer.linger.ms: "0"
          producer.batch.size: "16384"
          emit.heartbeats.enabled: true
          emit.checkpoints.enabled: true
          sync.group.offsets.enabled: true
          sync.topic.acls.enabled: false
          refresh.topics.enabled: true
          refresh.groups.enabled: true
          auto.create.topics.enable: true
          security.protocol: SASL_PLAINTEXT
          sasl.mechanism: SCRAM-SHA-512
          sasl.jaas.config: "${SASL_JAAS_CONFIG}"
          producer.request.timeout.ms: 60000
          consumer.request.timeout.ms: 60000
          consumer.metadata.fetch.timeout.ms: 60000
          offset-syncs.topic.replication.factor: 1
          refresh.topics.interval.seconds: 10
          client.dns.lookup: use_all_dns_ips
          config.storage.topic: mirrormaker2-cluster-configs
          offset.storage.topic: mirrormaker2-cluster-offsets
          status.storage.topic: mirrormaker2-cluster-status
  template:
    connectContainer:
      env:
        - name: KAFKA_CONNECT_REST_ADVERTISED_HOST_NAME
          value: "mm2-extended-mirrormaker2"
        - name: KAFKA_CONNECT_REST_PORT
          value: "8083"
        - name: SASL_JAAS_CONFIG
          valueFrom:
            secretKeyRef:
              name: quarkusdroneshop-user
              key: sasl.jaas.config


